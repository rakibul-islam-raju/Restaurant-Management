import Divider from "@/components/Divider";
import Footer from "@/components/Footer";
import Navbar from "@/components/Header/Navbar";
import Topbar from "@/components/Header/Topbar";
import { ErrorMessage } from "@/components/Messages";
import Cart from "@/components/Order/Cart";
import SectionHeader from "@/components/SectionHeader";
import Buttton from "@/components/utils/Button";
import Input from "@/components/utils/Input";
import { AuthContext } from "@/contexts/AuthContext";
import { CartContext } from "@/contexts/CartContext";
import orderService from "@/services/orderService";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import { useContext, useEffect, useState } from "react";
import { toast } from "react-toastify";

export default function Orders() {
	const router = useRouter();
	const { authChecked, isAuthenticated, user } = useContext(AuthContext);
	const { cartItems, clearCart } = useContext(CartContext);

	const [loading, setLoading] = useState(false);
	const [errorMessage, setErrorMessage] = useState(null);

	const getTotalPrice = () => {
		let total = 0;
		cartItems.forEach((item) => {
			total += item.offer_price
				? item.offer_price * item.quantity
				: item.price * item.quantity;
		});
		return total;
	};

	const fivePercentTax = getTotalPrice() * 0.05;
	const grandTotal = fivePercentTax + getTotalPrice();

	const confirmOrderHandler = async () => {
		setLoading(true);
		setErrorMessage(null);
		try {
			const response = await orderService.createOrder({
				order_items: cartItems,
				tax: fivePercentTax,
				total_price: getTotalPrice(),
			});
			if (response?.id) {
				clearCart();
				toast.success("Order Successfull");
				router.push("/profile");
			}
		} catch (err) {
			setErrorMessage(err?.data?.details || "Something went wrong!");
		} finally {
			setLoading(false);
		}
	};

	useEffect(() => {
		if (authChecked && !isAuthenticated) {
			router.push(`/login?next=${encodeURIComponent("orders")}`);
		}
	}, [isAuthenticated]);

	useEffect(() => {
		if (cartItems?.length < 1) {
			router.push(`/`);
		}
	}, []);

	return !authChecked ? (
		<h4>Loading</h4>
	) : (
		<>
			<Head>
				<title>Orders | Take My Order</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
			</Head>

			<section className="">
				{/* breadcrumb section */}
				<div className="md:pb-32">
					<Topbar />
					<Navbar />
					<section className="relative bg-gradient-to-br w-full h-56  from-gray-800 to-gray-600  ">
						<div className="md:top-0 h-72 top-16 mix-blend-overlay z-0 opacity-80 ">
							<Image
								src={"/bg_1.jpg.webp"}
								fill
								alt="Food Background"
								className="object-cover object-center md:object-center"
							/>
						</div>
					</section>
				</div>

				<div className="wrapper">
					<SectionHeader upperText={"Orders"} lowerText={"Orders"} />

					{errorMessage && <ErrorMessage text={errorMessage} />}

					<div className="mb-16">
						<div className="">
							<h4>User Details</h4>
							<Divider />
							<div className="flex gap-4">
								<div className="w-full">
									<Input
										labelText="Name"
										disabled
										value={`${user?.first_name} ${user?.last_name}`}
									/>
								</div>
								<div className="w-full">
									<Input labelText="Email" disabled value={`${user?.email}`} />
								</div>
							</div>
						</div>
						<div className="mt-12">
							<h4>Ordered Items</h4>
							<Divider />
							<Cart orderPage />

							<div className="flex justify-between border-b pb-2 mb-2">
								<div className="font-semibold text-xl">
									Tax <span className="text-sm">(5%)</span>
								</div>
								<div className="font-semibold text-xl">{fivePercentTax} ৳</div>
							</div>
							<div className="flex justify-between">
								<div className="font-semibold text-xl">
									Grand Total <span className="text-sm">(5%)</span>
								</div>
								<div className="font-semibold text-xl">{grandTotal} ৳</div>
							</div>
						</div>
					</div>

					<Buttton
						text="Confirm Order"
						width={"w-full"}
						onClickHandler={confirmOrderHandler}
						disabled={loading}
					/>
				</div>

				<Footer />
			</section>
		</>
	);
}
