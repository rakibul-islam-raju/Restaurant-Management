import Footer from "@/components/Footer";
import Navbar from "@/components/Header/Navbar";
import Topbar from "@/components/Header/Topbar";
import { ErrorMessage, WarningMessage } from "@/components/Messages";
import OrderTable from "@/components/Order/OrderTable";
import SectionHeader from "@/components/SectionHeader";
import { AuthContext } from "@/contexts/AuthContext";
import orderService from "@/services/orderService";
import Head from "next/head";
import Image from "next/image";
import { useRouter } from "next/router";
import { useContext, useEffect, useState } from "react";
import profilePic from "../assets/images/profile-picture.jpeg";

export default function Profile() {
	const router = useRouter();
	const { authChecked, isAuthenticated, user } = useContext(AuthContext);

	const [orders, setOrders] = useState(null);
	const [loading, setLoading] = useState(false);
	const [errorMessage, setErrorMessage] = useState(null);

	const fetchOrders = async () => {
		setLoading(true);
		setErrorMessage(null);

		try {
			const res = await orderService.getOrders(user?.email);
			setOrders(res);
		} catch (err) {
			setErrorMessage(err?.data?.details || "Something went wrong!");
		} finally {
			setLoading(false);
		}
	};

	useEffect(() => {
		if (authChecked && !isAuthenticated) {
			router.push(`/login?next=${encodeURIComponent("profile")}`);
		}
	}, [isAuthenticated]);

	useEffect(() => {
		if (user?.email) {
			fetchOrders();
		}
	}, [user]);

	return !authChecked ? (
		<h4>Loading</h4>
	) : (
		<>
			<Head>
				<title>Profile | Take My Order</title>
				<meta name="description" content="Generated by create next app" />
				<meta name="viewport" content="width=device-width, initial-scale=1" />
			</Head>

			<section className="">
				{/* breadcrumb section */}
				<div className="md:pb-32">
					<Topbar />
					<Navbar />
					<section className="relative bg-gradient-to-br w-full h-56  from-gray-800 to-gray-600  ">
						<div className="md:top-0 h-72 top-16 mix-blend-overlay z-0 opacity-80 ">
							<Image
								src={"/bg_1.jpg.webp"}
								fill
								alt="Food Background"
								className="object-cover object-center md:object-center"
							/>
						</div>
					</section>
				</div>

				<div className="wrapper">
					<SectionHeader upperText={"Profile"} lowerText={"Profile"} />

					{errorMessage && <ErrorMessage text={errorMessage} />}
					<div className="">
						{/* user info */}
						<div className="p-2 rounded shadow w-full">
							<div className="flex gap-3 items-center">
								<div className="relative w-32 h-32">
									<Image
										src={profilePic}
										alt={`${user?.first_name} ${user?.last_name}`}
										fill
										className="object-cover object-center md:object-center rounded-full"
									/>
								</div>
								<div className="grow">
									<div className="flex justify-end">
										<button
											type="button"
											className="border border-golden px-2 py-1  text-golden font-semibold text-sm hover:bg-golden hover:text-white transition"
										>
											Edit Profile
										</button>
									</div>
									<h4>
										{user?.first_name} {user?.last_name}
									</h4>
									<div className="text-md text-gray-500">{user?.email}</div>
								</div>
							</div>
						</div>

						{/* order history */}
						<div className="mt-8">
							<h3>Order History</h3>
							{orders?.results?.length < 1 ? (
								<WarningMessage text={"You do not have any orders!"} />
							) : (
								<OrderTable data={orders} />
							)}
						</div>
					</div>
				</div>

				<Footer />
			</section>
		</>
	);
}
